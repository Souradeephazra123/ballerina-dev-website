import fs from "fs";
import matter from "gray-matter";
import React, { useState } from "react";
import { Container, Col, Button, Offcanvas } from "react-bootstrap";
import Image from "next-image-export-optimizer";
import Head from "next/head";

import Layout from "../../../layouts/LayoutDocs";
import LeftNav from "../../../components/common/left-nav/LeftNav";
import MainContent from "../../../components/common/main-content/MainContent";
import Toc from "../../../components/common/pg-toc/Toc";
import { highlight } from "../../../utils/highlighter";
import LearnToc from "../../../utils/learn-lm.json";

String.prototype.hashCode = function () {
  let hash = 0;
  for (let i = 0; i < this.length; i++) {
    const chr = this.charCodeAt(i);
    hash = ((hash << 5) - hash) + chr;
    hash |= 0;
  }
  return hash;
};

function traverseFolder(dir) {
  let results = [];
  const list = fs.readdirSync(dir);
  list.forEach(function (file) {
    const filex = `${dir}/${file}`;
    const stat = fs.statSync(filex);
    if (stat && stat.isDirectory()) {
      results = results.concat(traverseFolder(filex));
    } else {
      filex = filex.replace(/swan-lake\/integration\//g, "");
      results.push(filex);
    }
  });
  return results;
}

async function highlightContent(content) {
  return await highlight(content);
}

function PostPage({
  frontmatter,
  content,
  id,
  sub,
  third,
  slug,
  codes
}) {
  const [show, setShow] = useState(false);
  const [showToc, setShowToc] = useState(false);

  const handleToc = (data) => {
    setShowToc(data);
  };

  return (
    <>
      <Head>
        {/* Meta tags */}
      </Head>
      <Layout>
        <Col sm={3} xxl={2} className="leftNav d-none d-sm-block">
          <LeftNav
            launcher="learn"
            id={id}
            mainDir="integration"
            sub={sub}
            third={third}
            Toc={LearnToc}
          />
        </Col>
        <Col xs={12} className="d-block d-sm-none">
          <Button className="learnMob" onClick={() => setShow(true)}>
            Learn
          </Button>
          <Offcanvas show={show} onHide={() => setShow(false)}>
            <Offcanvas.Header closeButton></Offcanvas.Header>
            <Offcanvas.Body>
              <LeftNav
                launcher="learn"
                id={id}
                mainDir="integration"
                sub={sub}
                third={third}
                Toc={LearnToc}
              />
            </Offcanvas.Body>
          </Offcanvas>
        </Col>
        <Col xs={12} sm={7} xxl={7} className="mdContent">
          <Container>
            {/* Content */}
          </Container>
        </Col>
        <Col sm={2} xxl={3} className="pageToc d-none d-sm-block">
          {showToc && (
            <>
              <h6>On this page</h6>
              <Toc source={content} />
            </>
          )}
        </Col>
      </Layout>
    </>
  );
}

export async function getStaticPaths() {
  const files = traverseFolder("swan-lake/integration");
  const paths = files.map((fileName) => ({
    params: {
      slug: fileName.replace(".md", "").split("/"),
    },
  }));

  return {
    paths,
    fallback: false,
  };
}

export async function getStaticProps({ params: { slug } }) {
  const id = slug[slug.length - 1];
  let sub = "";
  let third = "";
  if (slug.length === 2) {
    sub = slug[slug.length - 2];
  }
  if (slug.length === 3) {
    sub = slug[slug.length - 3];
    third = slug[slug.length - 2];
  }

  slug = slug.join("/");
  const fileName = fs.readFileSync(
    `swan-lake/integration/${slug}.md`,
    "utf-8"
  );
  const { data: frontmatter, content } = matter(fileName);

  const codes = await highlightContent(content);

  return {
    props: {
      frontmatter,
      content,
      id,
      sub,
      third,
      slug,
      codes
    },
  };
}

export default PostPage;
